/*
 * This build file was auto generated by 'gigawatt'
 * @author d7392
 * @date 31-08-2017 14.22
 */

// [plugins] this block must be the first
plugins {
	// expose deps as api
	id 'java-library'
	// support for groovy
	id 'groovy'
	// autogenerate eclipse project files
	id 'eclipse'
	// create an html index linking every report generated
	id 'build-dashboard'
	// view of the project (jars used, navigable source tree)
	id 'project-report'
	// groovy code linter
	id 'codenarc'
	// test code coverage plugin
	id 'net.saliman.cobertura' version '2.6.0'
	// finally! tag version is software version!
	id 'pl.allegro.tech.build.axion-release' version '1.10.1'
}

// [general] configuration
project.ext {
	groovyVersion       = '2.5.6'
	gradleVersion       = '5.3.1'
	spockVersion        = '1.3-groovy-2.5'
	codenarcVersion     = '1.3'
	slf4jVersion        = '1.7.26'
	hikariVersion       = '3.3.1'
	mysqlJdbcVersion    = '8.0.15'
}

project.with {
	//project.name is set in the settings.gradle with rootProject.name
	group                 "it.italiaonline.rnd"
	version               scmVersion.version
	description           "A 'gigawatt' powered project."
	wrapper.gradleVersion "$gradleVersion"
}
// [crosscompile] source and target java version
allprojects {
	sourceCompatibility = '1.8'
	targetCompatibility = sourceCompatibility
}

repositories {
	jcenter()
}

dependencies {
	// Groovy language support
	api (
		"org.codehaus.groovy:groovy-sql:$groovyVersion",
		"com.zaxxer:HikariCP:$hikariVersion"
	)

	implementation (
		"org.slf4j:slf4j-api:$slf4jVersion"
	)

	// We use the awesome Spock testing and specification framework
	testImplementation (
		"org.spockframework:spock-core:$spockVersion",
		"mysql:mysql-connector-java:$mysqlJdbcVersion"
	)
}

// codenarc groovy source analyses
codenarc{
	toolVersion = "$codenarcVersion"

	codenarcMain {
		configFile = rootProject.file('config/codenarc/ruleset.groovy')
		exclude "**/package-info.*"
		ignoreFailures true       // does not block builds
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
	codenarcTest {
		configFile = rootProject.file('config/codenarc/ruleset-test.groovy')
		ignoreFailures true
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
}

// [tasks] configuration //
jar {
	// execute check task when create the jar
	dependsOn 'check'
}

tasks.withType(Test) {
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}
task unitTest(type: Test) {
	exclude '**/*ISpec*'
	exclude '**/*FSpec*'
}
// vim: ft=groovy:fdm=indent
